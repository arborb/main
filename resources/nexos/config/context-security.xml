<?xml version="1.0" encoding="UTF-8"?>
<!--
  //====================================================================================================================
  // 공통적으로 사용하는 Spring Root Context 설정 [보안 설정]
  // Author : ASETEC
  // Date : 2012-10-25
  // Description
  // Root Context 중에서 보안 설정 부분
  //====================================================================================================================
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                      http://www.springframework.org/schema/security
                      http://www.springframework.org/schema/security/spring-security-3.1.xsd
                      http://www.springframework.org/schema/context
                      http://www.springframework.org/schema/context/spring-context-3.1.xsd"
>
  <security:http auto-config="true" use-expressions="true">
    <security:intercept-url pattern="/**/*.gif" access="permitAll" />
    <security:intercept-url pattern="/**/*.png" access="permitAll" />
    <security:intercept-url pattern="/**/*.jpg" access="permitAll" />
    <security:intercept-url pattern="/**/*.ico" access="permitAll" />
    <security:intercept-url pattern="/**/*.css" access="permitAll" />
    <security:intercept-url pattern="/**/*.html" access="permitAll" />
    <security:intercept-url pattern="/**/*.js" access="permitAll" />
    <!-- <security:intercept-url pattern="/**/*.swf" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/index.html" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/common/js/misc/**/*.js" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/common/js/jquery/**/*.js" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/common/js/slickgrid/**/*.js" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/common/js/jwindow/**/*.js" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/common/js/*.js" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/main/**/*.html" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/nexos/html/main/**/*.js" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/**" access="permitAll" /> -->
    <!-- <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> -->
     <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="sessionAuthenticationFilter" />
    <security:session-management session-authentication-strategy-ref="sessionAuthenticationStrategy" />
  </security:http>

   <!-- Session 관련 -->
  <bean id="sessionAuthenticationFilter" class="nexos.common.spring.security.SecurityUserAuthenticationFilter">
    <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
  </bean>

  <bean id="sessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    <property name="maximumSessions" value="1" />
    <property name="exceptionIfMaximumExceeded" value="false" />
  </bean>

  <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  <bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

  <!-- Security 관련 -->
  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider ref="authenticationProvider" />
  </security:authentication-manager>

  <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <property name="userDetailsService" ref="securityUserDetailsService" />
    <property name="passwordEncoder" ref="securityUserPasswordEncoder" />
    <!-- <property name="hideUserNotFoundExceptions" value="false" /> -->
  </bean>

  <bean id="securityUserDetailsService" class="nexos.common.spring.security.SecurityUserDetailsService">
    <property name="sqlMapClientTemplate" ref="sqlMapClientTemplate" />
  </bean>

  <bean id="securityUserPasswordEncoder" class="nexos.common.spring.security.SecurityUserPasswordEncoder">
    <property name="commonEncryptor" ref="commonEncryptor" />
  </bean>

  <!-- services 대해 ROLE_USER를 세팅 -->
  <security:global-method-security secured-annotations="enabled">
    <security:protect-pointcut access="ROLE_USER" expression="execution(* nexos.service..*.*(..))" />
  </security:global-method-security>
</beans>
